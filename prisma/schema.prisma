// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User roles enum
enum Role {
  AGRIBUSINESS
  BUSINESS_BUYER
  LOGISTICS_PARTNER
  ADMIN
}

// Verification status enum
enum VerificationStatus {
  PENDING
  VERIFIED
  REJECTED
}

// Base User model
model User {
  id               String            @id @default(uuid())
  email            String            @unique
  name             String
  role             Role
  password         String?
  isActive         Boolean           @default(true)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  // Role-specific profiles
  agribusiness     Agribusiness?
  businessBuyer    BusinessBuyer?
  logisticsPartner LogisticsPartner?
  admin            Admin?

  // Sessions
  sessions Session[]
}

model FrequentlyAskedQuestion {
  id          String   @id @default(uuid())
  question    String
}

// Agribusiness profile
// model Agribusiness {
//   id                 String             @id @default(uuid())
//   userId             String             @unique
//   user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)
//   businessName       String
//   contactName        String
//   businessAddress    String
//   tradingType       String
//   subscriptionTier   String             @default("FREE")
//   isKybVerified      Boolean            @default(false)
//   createdAt          DateTime           @default(now())
//   updatedAt          DateTime           @updatedAt
// }

model Agribusiness {
  id                 String             @id @default(uuid())
  userId             String             @unique
  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  // Stage 1: Initial Registration Data (from sign-up form)
  businessName       String
  tradingType        String
  primaryCropCategory String
  country            String
  state              String
  // Stage 2: KYB Status and Business Operations
  kybStatus          KYBStatus          @default(NOT_SUBMITTED)
  subscriptionTier   String             @default("FREE")
  isKybVerified      Boolean            @default(false)

  bio               String?
  contactNo            String?
  businessImage     String?
  // Relationship to KYB form
  kybForm            KYBForm?
  // Relationship to products
  products           Product[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

enum KYBStatus {
  NOT_SUBMITTED
  PENDING
  APPROVED
  REJECTED
  REQUIRES_RESUBMISSION
}

model KYBForm {
  id                    String             @id @default(uuid())
  agribusinessId        String             @unique
  agribusiness          Agribusiness       @relation(fields: [agribusinessId], references: [id], onDelete: Cascade)
  
  // KYB-specific fields
  businessRegistrationNumber String?
  businessAddress       String
  taxId                 String?
  businessLicense       String?           // File path or URL
  
  // KYB Review fields
  submittedAt           DateTime?
  reviewedAt            DateTime?
  reviewedBy            String?           // Admin user ID
  rejectionReason       String?
  
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
}

// Business Buyer profile
model BusinessBuyer {
  id                      String             @id @default(uuid())
  userId                  String             @unique
  user                    User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  companyName             String
  companyAddress          String
  companyType             String
  verificationStatus      VerificationStatus @default(PENDING)
  loyaltyPoints           Int                @default(0)
  preferredPaymentMethods String[]           @default([])
  createdAt               DateTime           @default(now())
  updatedAt               DateTime           @updatedAt
}

// Logistics Partner profile
model LogisticsPartner {
  id                 String             @id @default(uuid())
  userId             String             @unique
  user               User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  companyName        String
  companyAddress     String
  serviceAreas       String[]           @default([])
  transportModes     String[]           @default([])
  verificationStatus VerificationStatus @default(PENDING)
  isKybVerified      Boolean            @default(false)
  registrationNumber String?
  insuranceInfo      String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

// Admin profile
model Admin {
  id          String    @id @default(uuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  department  String?
  permissions String[]  @default(["ALL"]) // All admins have full permissions
  lastLogin   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Session model for authentication
model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Product status enum
enum ProductStatus {
  ACTIVE
  INACTIVE
  OUT_OF_STOCK
  EXPIRED
}

// Product model for agricultural products
model Product {
  id                    String        @id @default(uuid())
  agribusinessId        String
  agribusiness          Agribusiness  @relation(fields: [agribusinessId], references: [id], onDelete: Cascade)
  
  // Section A: Product Information
  productTitle          String
  cropCategory          String
  description           String?
  unitOfMeasurement     String
  minimumOrderQuantity  Int
  quantityAvailable     Int
  
  // Section B: Pricing & Terms
  pricing               Decimal       @db.Decimal(10, 2)
  currency              String        @default("RM")
  allowBidding          Boolean       @default(false)
  
  // Section C: Additional Details & Media
  storageConditions     String?
  expiryDate            DateTime?
  location              String
  productImages         String[]      @default([]) // Array of image URLs/paths
  
  // Section D: Shipping Options
  shippingMethod        String?
  directShippingCost    Decimal?      @db.Decimal(10, 2)
  selectedLogistics     String?
  
  // Product status and metadata
  status                ProductStatus @default(ACTIVE)
  isActive              Boolean       @default(true)
  createdAt             DateTime      @default(now())
  updatedAt             DateTime      @updatedAt
  
  @@index([agribusinessId])
  @@index([cropCategory])
  @@index([status])
}
